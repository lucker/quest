{% extends 'base.html.twig' %}

{% block main %}
    <form id="formId">
        <div class="row">
            <div class="col-sm-10 col-md-10 col-8">
                <input type="text" name="answer" class="form-control" placeholder="">
                <input type="hidden" name="hash" value="{{ questTeamParticipant.hash }}">
            </div>
            <div class="col-sm-2 col-md-2 col-4">
                <input id="submitButton" type="submit" class="btn btn-primary" value="Відповісти"/>
            </div>
        </div>
    </form>
    <div id="correct_answers">
        {% for correctAnswer in correctAnswers %}
            <div class="text-success">{{ correctAnswer }}</div>
        {% endfor %}
    </div>
    <div id="wrong_answers">

    </div>
    <div class="col-sm-12">
        {{ questQuestion.question|raw }}
    </div>
    <div id="demo">gfg</div>
    <div class="col-sm-12">
        {% for questionHint in questionHints %}
            <div>Hint {{ loop.index0 + 1 }}</div>
            <div>{{ questionHint.hint }}</div>
        {% endfor %}
    </div>
    <script>
        $("form").on("submit", function (e) {
            var dataString = $(this).serialize();

            $.ajax({
                type: "POST",
                url: "/en/check-answer",
                data: dataString,
                success: function (data, status) {
                    console.log(data);
                    let correct = data.correct;
                    let answer = data.answer;
                    let reload = data.reload;
                    if (!correct) {
                        $("#wrong_answers").html('<div class="text-danger">' + answer  + '</div>')
                    }

                    let correctAnswers = data.correctAnswers;
                    let answersHtml = '';
                    for (let i = 0; i < correctAnswers.length; i++) {
                        answersHtml = answersHtml + '<div class="text-success">' + correctAnswers[i] + '</div>';
                    }
                    $("#correct_answers").html('<div class="text-success">' + answersHtml + '</div>');

                    if (reload) {
                        location.reload();
                    }
                }
            });
            e.preventDefault();
        });

        /*setInterval(function() {
            $.ajax({
                type: "GET",
                url: "/en/check/{{ hash }}/{{ questQuestion.id }}",
                success: function (data, status) {
                    let correctAnswers = data.correctAnswers;
                    let answersHtml = '';
                    for (let i = 0; i < correctAnswers.length; i++) {
                        answersHtml = answersHtml + '<div class="text-success">' + correctAnswers[i] + '</div>';
                    }
                    $("#correct_answers").html('<div class="text-success">' + answersHtml + '</div>');
                }
            });
        }, 1000);*/

        // Set the date we're counting down to
        var countDownDate = new Date("Jan 5, 2024 15:37:25").getTime();

        // Update the count down every 1 second
        /*var x = setInterval(function() {

            // Get today's date and time
            var now = new Date().getTime();

            // Find the distance between now and the count down date
            var distance = countDownDate - now;

            // Time calculations for days, hours, minutes and seconds
            var days = Math.floor(distance / (1000 * 60 * 60 * 24));
            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);

            // Display the result in the element with id="demo"
            document.getElementById("demo").innerHTML = days + "d " + hours + "h "
                + minutes + "m " + seconds + "s ";

            // If the count down is finished, write some text
            if (distance < 0) {
                clearInterval(x);
                document.getElementById("demo").innerHTML = "EXPIRED";
            }
        }, 1000);*/

        var conn = new WebSocket('ws://172.19.0.2:3001');
        conn.onopen = function(e) {
            console.log("Connection established!");
        };

        conn.onmessage = function(e) {
            console.log(e.data);
        };

        conn.onerror = function(e) {
            console.log(e);
        }

        /*setInterval(function() {
            conn.send('Hello World!2');
        }, 1000);*/
    </script>
{% endblock %}